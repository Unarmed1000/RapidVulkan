# stop if cmake version below 3.10.2
cmake_minimum_required(VERSION 3.10.2 FATAL_ERROR)

# Generate folders for IDE's
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

###########
# Options #
###########


###########
# Project #
###########

# Version matches the Vulkan header versions except we encode the "tweak" part as "tweak * 1000". 
# This means
#   tweak / 1000 = the vulkan tweak version.
#   tweak %1000 = this libraries tweak version.

# Description is 3.9  
#  DESCRIPTION "Low level header only C++11 RAII wrapper classes for the Vulkan API. The RAII class design is heavily inspired by std::unique_ptr and is compatible with STL containers."
# URL is 12
#  HOMEPAGE_URL https://github.com/Unarmed1000/RapidVulkan

project(
  RapidVulkan
  VERSION 1.2.141.2000
  LANGUAGES CXX
)
# Disable project in-source buils
if("${PROJECT_SOURCE_DIR}" STREQUAL "${PROJECT_BINARY_DIR}")
   message(SEND_ERROR "In-source builds are not permitted. Use a separate folder for building. Unfortunately some files might have been generated by cmake in this directory, please delete those before continuing.")
endif("${PROJECT_SOURCE_DIR}" STREQUAL "${PROJECT_BINARY_DIR}")

add_library(RapidVulkan INTERFACE)

#Add an alias so that library can be used inside the build tree
add_library(RapidVulkan::RapidVulkan ALIAS RapidVulkan)

# Attach headers
#target_sources(RapidVulkan 
#  INTERFACE 
#  $<INSTALL_INTERFACE:include>
#  $<BUILD_INTERFACE:include>
#)

# Location of header files in this package
target_include_directories(RapidVulkan
  INTERFACE
    $<INSTALL_INTERFACE:include>
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
)

################
# Dependencies #
################

find_package(Vulkan REQUIRED)

target_link_libraries(RapidVulkan
  INTERFACE
    Vulkan::Vulkan
)

target_compile_features(RapidVulkan
  INTERFACE
    cxx_std_11 # Enable C++11
)

#############################
# Installation instructions #
#############################

include(GNUInstallDirs)
set(INSTALL_CONFIGDIR ${CMAKE_INSTALL_LIBDIR}/cmake/RapidVulkan)

install(TARGETS RapidVulkan
  EXPORT RapidVulkanTargets
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
  INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)

install(DIRECTORY include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

# Create a ConfigVersion.cmake file
include(CMakePackageConfigHelpers)
write_basic_package_version_file(
    ${CMAKE_CURRENT_BINARY_DIR}/RapidVulkanConfigVersion.cmake
    VERSION ${PROJECT_VERSION}
    COMPATIBILITY SameMajorVersion
)

# Export the targets to a script
install(EXPORT RapidVulkanTargets
  FILE RapidVulkanTargets.cmake
  NAMESPACE RapidVulkan::
  DESTINATION ${INSTALL_CONFIGDIR}
)

# Install the config, configversion and custom find modules
configure_file(RapidVulkanConfig.cmake.in RapidVulkanConfig.cmake @ONLY)
install(
  FILES
    "${CMAKE_CURRENT_BINARY_DIR}/RapidVulkanConfig.cmake"
    "${CMAKE_CURRENT_BINARY_DIR}/RapidVulkanConfigVersion.cmake"
  DESTINATION ${INSTALL_CONFIGDIR}
)

#############
# Exporting #
#############

#export(
#  TARGETS
#    RapidVulkan
#  NAMESPACE RapidVulkan::
#  FILE RapidVulkanTargets.cmake
#)
#
## Register package in user's package registry
#export(PACKAGE RapidVulkan)
